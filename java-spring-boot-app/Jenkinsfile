
/* Jenkins file for CI */
pipeline {
    agent any
    tools {
        maven 'maven'
    }
    stages{
        stage("clone"){
            steps{
                git branch: 'feature', url: 'https://github.com/thehulkhunts/mydevopswork.git'
            }
        }
     /*   stage("static-code analysis"){
            steps{
                withSonarQubeEnv('sonar') {
                  sh 'cd /var/lib/jenkins/workspace/feature-01-dev-qa-environment/java-spring-boot-app/ && mvn sonar:sonar'
               }
            }
        } */
        stage("build"){
            environment {
                WORKDIR = "/var/lib/jenkins/workspace/feature-01-dev-qa-environment/java-spring-boot-app"
            }
            steps{
                sh 'cd /var/lib/jenkins/workspace/feature-01-dev-qa-environment/java-spring-boot-app/ && mvn clean package'
            }
        }
      /*  stage("upload-artifact-nexus"){
            steps{
                nexusArtifactUploader artifacts: [
                    [
                        artifactId: 'spring-boot-demo',
                        classifier: '',
                        file: '/var/lib/jenkins/workspace/feature-01-dev-qa-environment/java-spring-boot-app/target/spring-boot-web.jar',
                        type: 'jar'
                        ]
                        ],
                        credentialsId: 'nexus',
                        groupId: 'com.abhishek',
                        nexusUrl: '172.31.46.148:8081',
                        nexusVersion: 'nexus3',
                        protocol: 'http',
                        repository: 'spring-boot-repo', 
                        version: '2.0'
            }
        } */
        stage("build docker image"){
            steps{
                sh 'cd /var/lib/jenkins/workspace/feature-01-dev-qa-environment/java-spring-boot-app/ && docker build -t java-app:release-1.0 .'
            }
        }
       /*   stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "mydevopswork"
            GIT_USER_NAME = "thehulkhunts"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "vinayjadhav@gmail.com"
                    git config user.name "vinayjadhav"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" /var/lib/jenkins/workspace/feature-01-dev-qa-environment/java-spring-boot-app/spring-boot-app-manifests/deployment.yml
                    git add /var/lib/jenkins/workspace/feature-01-dev-qa-environment/java-spring-boot-app/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:feature
                '''
            }
        }
      } */
    }
}
